---
description: Styling guidelines for Tailwind CSS with eb- prefix and responsive design
---

# Styling Guidelines

## Tailwind CSS Requirements

ALL Tailwind CSS classes MUST be prefixed with `eb-`. This is mandatory for the embedded components library.

## Correct Usage Examples

```typescript
// ✅ CORRECT - All classes prefixed with eb-
<div className="eb-flex eb-items-center eb-gap-4 eb-p-6">
  <Button className="eb-bg-primary eb-text-white eb-rounded-lg">
    Click me
  </Button>
</div>

// ❌ INCORRECT - Missing eb- prefix
<div className="flex items-center gap-4 p-6">
  <Button className="bg-primary text-white rounded-lg">
    Click me
  </Button>
</div>
```

## Common Class Patterns

```typescript
// Layout
className = "eb-flex eb-flex-col eb-items-center eb-justify-between";
className = "eb-grid eb-grid-cols-2 eb-gap-4";
className = "eb-w-full eb-h-full eb-max-w-md";

// Spacing
className = "eb-p-4 eb-px-6 eb-py-2 eb-m-4 eb-mx-auto";
className = "eb-space-y-4 eb-space-x-2";

// Typography
className = "eb-text-lg eb-font-semibold eb-text-gray-900";
className = "eb-text-sm eb-text-center eb-leading-relaxed";

// Colors and Backgrounds
className = "eb-bg-white eb-text-black eb-border-gray-200";
className = "eb-bg-primary eb-text-primary-foreground";

// Interactive States
className =
  "eb-hover:eb-bg-gray-100 eb-focus:eb-ring-2 eb-focus:eb-ring-primary";
className = "eb-disabled:eb-opacity-50 eb-disabled:eb-cursor-not-allowed";
```

## Responsive Design Patterns

```typescript
// Mobile-first responsive design
className = "eb-w-full sm:eb-w-auto md:eb-w-1/2 lg:eb-w-1/3";
className = "eb-text-sm sm:eb-text-base md:eb-text-lg";
className = "eb-flex-col sm:eb-flex-row";
className = "eb-hidden sm:eb-block md:eb-flex";
```

## Component-Specific Patterns

### Dialog/Modal Scrolling

```typescript
// Use CSS classes for scrollable dialogs
<DialogContent className="eb-scrollable-dialog eb-max-w-2xl">
  <DialogHeader>
    <DialogTitle>Title</DialogTitle>
  </DialogHeader>
  <div className="eb-scrollable-content">
    {/* Content automatically scrollable */}
  </div>
</DialogContent>
```

### Form Layouts

```typescript
<form className="eb-space-y-6">
  <div className="eb-grid eb-grid-cols-2 eb-gap-4">
    <div className="eb-space-y-2">
      <Label className="eb-text-sm eb-font-medium">Field</Label>
      <Input className="eb-w-full" />
    </div>
  </div>
</form>
```

### Card Components

```typescript
<Card className="eb-w-full eb-shadow-sm">
  <CardHeader className="eb-pb-4">
    <CardTitle className="eb-text-xl eb-font-semibold">Title</CardTitle>
  </CardHeader>
  <CardContent className="eb-space-y-4">{/* Content */}</CardContent>
</Card>
```

## Theme Integration

Components should use theme tokens when possible:

```typescript
// Use theme-aware colors
className = "eb-bg-background eb-text-foreground";
className = "eb-bg-primary eb-text-primary-foreground";
className = "eb-bg-muted eb-text-muted-foreground";
className = "eb-border-border";
```

## Accessibility Requirements

Always include accessibility classes:

```typescript
// Focus states
className =
  "eb-focus:eb-outline-none eb-focus:eb-ring-2 eb-focus:eb-ring-primary";

// Screen reader support
className = "eb-sr-only"; // For screen reader only content

// Proper contrast
className = "eb-text-gray-900 eb-bg-white"; // Ensure sufficient contrast
```

## Performance Considerations

- Prefer utility classes over custom CSS
- Use consistent spacing scale (eb-p-1, eb-p-2, eb-p-4, etc.)
- Avoid arbitrary values like `eb-w-[123px]` unless absolutely necessary
- Group related classes logically for readability

## Custom CSS Classes

When creating custom CSS (in index.css), prefix with `eb-`:

```css
@layer components {
  .eb-scrollable-dialog {
    @apply eb-flex eb-flex-col eb-h-[90vh];
  }

  .eb-custom-button {
    @apply eb-px-4 eb-py-2 eb-rounded-md eb-font-medium;
  }
}
```

## Validation Checklist

Before committing, verify:

- [ ] All Tailwind classes have `eb-` prefix
- [ ] Responsive breakpoints are mobile-first
- [ ] Focus states are implemented for interactive elements
- [ ] Color contrast meets accessibility standards
- [ ] No arbitrary values unless necessary
- [ ] Consistent spacing using design system scale
